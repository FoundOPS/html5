/*--------------------------------------------------------------------------
* jquery.linq-vsdoc.js - LINQ for jQuery
* ver 2.2.0.2 (Jan. 21th, 2011)
*
* created and maintained by neuecc <ils@neue.cc>
* licensed under Microsoft Public License(Ms-PL)
* http://neue.cc/
* http://linqjs.codeplex.com/
*--------------------------------------------------------------------------*/

jQuery.extend({Enumerable:function(){var Enumerable=function(getEnumerator){this.GetEnumerator=getEnumerator};Enumerable.Choice=function(Params_Contents){},Enumerable.Cycle=function(Params_Contents){},Enumerable.Empty=function(){},Enumerable.From=function(obj){},Enumerable.Return=function(element){},Enumerable.Matches=function(input,pattern,flags){},Enumerable.Range=function(start,count,step){},Enumerable.RangeDown=function(start,count,step){},Enumerable.RangeTo=function(start,to,step){},Enumerable.Repeat=function(obj,count){},Enumerable.RepeatWithFinalize=function(initializer,finalizer){},Enumerable.Generate=function(func,count){},Enumerable.ToInfinity=function(start,step){},Enumerable.ToNegativeInfinity=function(start,step){},Enumerable.Unfold=function(seed,func){},Enumerable.prototype={CascadeBreadthFirst:function(func,resultSelector){},CascadeDepthFirst:function(func,resultSelector){},Flatten:function(){},Pairwise:function(selector){},Scan:function(func_or_seed,func,resultSelector){},Select:function(selector){},SelectMany:function(collectionSelector,resultSelector){},Where:function(predicate){},OfType:function(type){},Zip:function(second,selector){},Join:function(inner,outerKeySelector,innerKeySelector,resultSelector,compareSelector){},GroupJoin:function(inner,outerKeySelector,innerKeySelector,resultSelector,compareSelector){},All:function(predicate){},Any:function(predicate){},Concat:function(second){},Insert:function(index,second){},Alternate:function(value){},Contains:function(value,compareSelector){},DefaultIfEmpty:function(defaultValue){},Distinct:function(compareSelector){},Except:function(second,compareSelector){},Intersect:function(second,compareSelector){},SequenceEqual:function(second,compareSelector){},Union:function(second,compareSelector){},OrderBy:function(keySelector){return new OrderedEnumerable},OrderByDescending:function(keySelector){return new OrderedEnumerable},Reverse:function(){},Shuffle:function(){},GroupBy:function(keySelector,elementSelector,resultSelector,compareSelector){},PartitionBy:function(keySelector,elementSelector,resultSelector,compareSelector){},BufferWithCount:function(count){},Aggregate:function(func_or_seed,func,resultSelector){},Average:function(selector){},Count:function(predicate){},Max:function(selector){},Min:function(selector){},MaxBy:function(keySelector){},MinBy:function(keySelector){},Sum:function(selector){},ElementAt:function(index){},ElementAtOrDefault:function(index,defaultValue){},First:function(predicate){},FirstOrDefault:function(defaultValue,predicate){},Last:function(predicate){},LastOrDefault:function(defaultValue,predicate){},Single:function(predicate){},SingleOrDefault:function(defaultValue,predicate){},Skip:function(count){},SkipWhile:function(predicate){},Take:function(count){},TakeWhile:function(predicate){},TakeExceptLast:function(count){},TakeFromLast:function(count){},IndexOf:function(item){},LastIndexOf:function(item){},ToArray:function(){},ToLookup:function(keySelector,elementSelector,compareSelector){return new Lookup},ToObject:function(keySelector,elementSelector){},ToDictionary:function(keySelector,elementSelector,compareSelector){return new Dictionary},ToJSON:function(replacer,space){},ToString:function(separator,selector){},Do:function(action){},ForEach:function(action){},Write:function(separator,selector){},WriteLine:function(selector){},Force:function(){},Let:function(func){},Share:function(){},MemoizeAll:function(){},Catch:function(handler){},Finally:function(finallyAction){},Trace:function(message,selector){}},Enumerable.prototype.GetEnumerator=function(){return new IEnumerator};var IEnumerator=function(){};IEnumerator.prototype.Current=function(){},IEnumerator.prototype.MoveNext=function(){},IEnumerator.prototype.Dispose=function(){};var Dictionary=function(){};Dictionary.prototype={Add:function(key,value){},Get:function(key){},Set:function(key,value){},Contains:function(key){},Clear:function(){},Remove:function(key){},Count:function(){},ToEnumerable:function(){}};var Lookup=function(){};Lookup.prototype={Count:function(){},Get:function(key){},Contains:function(key){},ToEnumerable:function(){}};var Grouping=function(){};Grouping.prototype=new Enumerable,Grouping.prototype.Key=function(){};var OrderedEnumerable=function(){};return OrderedEnumerable.prototype=new Enumerable,OrderedEnumerable.prototype.ThenBy=function(keySelector){return Enumerable.Empty().OrderBy()},OrderedEnumerable.prototype.ThenByDescending=function(keySelector){return Enumerable.Empty().OrderBy()},Enumerable}()}),function($){$.fn.toEnumerable=function(){return $.Enumerable.From(this).Select(function(e){return $(e)})},$.Enumerable.prototype.TojQuery=function(){return $(this.ToArray())}}(jQuery)