(function(Enumerable){Enumerable.prototype.ToObservable=function(scheduler){var source=this;return scheduler==null&&(scheduler=Rx.Scheduler.CurrentThread),Rx.Observable.CreateWithDisposable(function(observer){var disposable=new Rx.BooleanDisposable,enumerator=source.GetEnumerator();return scheduler.ScheduleRecursive(function(self){try{!disposable.GetIsDisposed()&&enumerator.MoveNext()?(observer.OnNext(enumerator.Current()),self()):(enumerator.Dispose(),observer.OnCompleted())}catch(e){enumerator.Dispose(),observer.OnError(e)}}),disposable})},Rx.Observable.prototype.ToEnumerable=function(){var obs=this;return Enumerable.Empty().Let(function(){var array=[];return obs.Subscribe(function(x){array.push(x)}).Dispose(),array})}})(this.Enumerable||this.jQuery.Enumerable)